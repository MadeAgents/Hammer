[
  {
    "query": "Can you check if today is a public holiday in China?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "arguments": {
          "countryCode": "CN"
        }
      }
    ]
  },
  {
    "query": "Get the country info for China.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "CountryCountryInfo",
        "arguments": {
          "countryCode": "CN"
        }
      }
    ]
  },
  {
    "query": "Get the list of all available countries for public holiday information.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "CountryAvailableCountries",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I want to know the version of the Nager.Date library being used. Can you fetch that for me?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "VersionGetVersion",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I need to find out if there are any long weekends in the United States in 2024. Can you help me with that?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "LongWeekendLongWeekend",
        "arguments": {
          "year": 2024,
          "countryCode": "US"
        }
      }
    ]
  },
  {
    "query": "Find out the next public holidays for the Great Britain.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayNextPublicHolidays",
        "arguments": {
          "countryCode": "GB"
        }
      }
    ]
  },
  {
    "query": "I'm curious about the public holidays in Australia in 2023. Can you fetch the list for me?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "arguments": {
          "year": 2023,
          "countryCode": "AU"
        }
      }
    ]
  },
  {
    "query": "Get the upcoming public holidays worldwide for the next 7 days.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm planning a trip to Japan next year. Can you find out if there are any long weekends in Japan in 2023? It would be great to align my trip with a long weekend.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "LongWeekendLongWeekend",
        "arguments": {
          "year": 2023,
          "countryCode": "JP"
        }
      }
    ]
  },
  {
    "query": "I'm curious about the public holidays in different countries. Could you show me the public holidays for the next week worldwide?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm working on a project about different countries. Can you provide me with information about France, such as its official name, region, and neighboring countries?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "CountryCountryInfo",
        "arguments": {
          "countryCode": "FR"
        }
      }
    ]
  },
  {
    "query": "I'm interested in knowing the upcoming public holidays in Germany for the next year. Could you fetch that information for me?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayNextPublicHolidays",
        "arguments": {
          "countryCode": "DE"
        }
      }
    ]
  },
  {
    "query": "I'm creating a calendar for my international team. Can you help me find the public holidays in the USA for 2023?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "arguments": {
          "year": 2023,
          "countryCode": "US"
        }
      }
    ]
  },
  {
    "query": "I'm planning a road trip across Europe. Can you provide me with information about Italy, including its common name, official name, and the countries it shares borders with?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "CountryCountryInfo",
        "arguments": {
          "countryCode": "IT"
        }
      }
    ]
  },
  {
    "query": "Can you help me plan my next vacation by checking the public holidays in Japan and Germany for the next year? I want to make sure I don't miss any important dates.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayNextPublicHolidays",
        "arguments": {
          "countryCode": "JP"
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "arguments": {
          "countryCode": "DE"
        }
      }
    ]
  },
  {
    "query": "Hey, I'm curious about the holidays in different countries. Can you compare the number of public holidays in Canada, and Mexico for 2023?",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "arguments": {
          "year": 2023,
          "countryCode": "CA"
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "arguments": {
          "year": 2023,
          "countryCode": "MX"
        }
      }
    ]
  },
  {
    "query": "I'm planning a surprise visit to my friend in Germany. I need to know when the next long weekend of the year 2023 is coming up, so I can plan my trip.",
    "tools": [
      {
        "name": "CountryCountryInfo",
        "description": "Get country info for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "CountryAvailableCountries",
        "description": "Get all available countries",
        "parameters": {}
      },
      {
        "name": "LongWeekendLongWeekend",
        "description": "Get long weekends for a given country",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayPublicHolidaysV3",
        "description": "Get public holidays",
        "parameters": {
          "year": {
            "type": "integer",
            "description": "",
            "required": true
          },
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayIsTodayPublicHoliday",
        "description": "Is today a public holiday",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          },
          "countyCode": {
            "type": "string",
            "description": ""
          },
          "offset": {
            "type": "integer",
            "description": "utc timezone offset."
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidays",
        "description": "Returns the upcoming public holidays for the next 365 days for the given country",
        "parameters": {
          "countryCode": {
            "type": "string",
            "description": "Two-character represented country code. For instance, CN or cn represents China.",
            "required": true
          }
        }
      },
      {
        "name": "PublicHolidayNextPublicHolidaysWorldwide",
        "description": "Returns the upcoming public holidays for the next 7 days",
        "parameters": {}
      },
      {
        "name": "VersionGetVersion",
        "description": "Get version of the used Nager.Date library",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#CountryInfoDto: Object{commonName, officialName, countryCode, region, borders: Array[#CountryInfoDto]}\n#CountryV3Dto: Object{countryCode, name}\n#LongWeekendV3Dto: Object{startDate, endDate, dayCount, needBridgeDay}\n#PublicHolidayType: \n#PublicHolidayV3Dto: Object{date, localName, name, countryCode, fixed, global, counties: Array[string], launchYear, types: Array[#PublicHolidayType]}\n#VersionInfoDto: Object{name, version}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "LongWeekendLongWeekend",
        "arguments": {
          "year": 2023,
          "countryCode": "DE"
        }
      }
    ]
  },
  {
    "query": "Can you find the website URL for the airport with the ICAO code \"EDDF\" in Germany?",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDF"
        }
      }
    ]
  },
  {
    "query": "Please retrieve the name and last update date for the airport with the ICAO code \"EDDM\" in Germany.",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDM"
        }
      }
    ]
  },
  {
    "query": "Get the ICAO code and website URL for the airport named \"Frankfurt Airport\" in Germany.",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDF"
        }
      }
    ]
  },
  {
    "query": "I need the last update date and name of the airport with the ICAO code \"EDDB\" in Germany.",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDB"
        }
      }
    ]
  },
  {
    "query": "Could you fetch the website URL and ICAO code for the airport called \"Munich Airport\" in Germany?",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDM"
        }
      }
    ]
  },
  {
    "query": "Retrieve the name and website URL for the airport with the ICAO code \"EDDH\" and \"EDDF\" in Germany.",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDH"
        }
      },
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDF"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Germany and I want to know more about the airport I'll be landing at. Can you find the name and website of the airport with the ICAO code 'EDDF'?",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDF"
        }
      }
    ]
  },
  {
    "query": "I'm doing a research on German airports. Could you provide me the name and website of the airport that has the ICAO code 'EDDM'?",
    "tools": [
      {
        "name": "AirportApi_getAirport",
        "description": "",
        "parameters": {
          "icao_code": {
            "type": "string",
            "description": "The ICAO code of the target airport located in Germany.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#ApiEndpointsAirportResponse: Object{ICAO, last_update, name, url}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "AirportApi_getAirport",
        "arguments": {
          "icao_code": "EDDM"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Asheville, North Carolina and I'd like to know more about the Asheville Regional Airport. Can you find the details for me using its FAA identifier, AVL?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "airports_get",
        "arguments": {
          "apt": "AVL"
        }
      }
    ]
  },
  {
    "query": "I'm preparing for a flight to Asheville Regional Airport (ICAO: AVL). Can you get me the aeronautical charts for this airport? I would like to see the general, departures, arrivals, and approaches charts specifically.",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "charts_get",
        "arguments": {
          "apt": "AVL",
          "group": 1
        }
      }
    ]
  },
  {
    "query": "I've heard that there have been some changes to the charts for Asheville Regional Airport (ICAO: AVL). Can you check if there are any updates to the 'Arrivals' chart?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "charts_changes_get",
        "arguments": {
          "apt": "AVL",
          "chart_name": "Arriivals"
        }
      }
    ]
  },
  {
    "query": "I'm a bit nervous about my upcoming flight. Can you find the Airport Facility Directory (AFD) for Asheville Regional Airport (ICAO: AVL) to help me familiarize myself with the airport layout?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "charts_afd_get",
        "arguments": {
          "apt": "AVL"
        }
      }
    ]
  },
  {
    "query": "I'm curious about the preferred routes for flights. Can you find all of the preferred routes for me?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "preferred-routes_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm planning a flight from Nantucket Memorial Airport (ICAO: ACK) to Erie International Airport (ICAO: ERI). Can you find the preferred routes for this journey? I'll be flying at a low altitude.",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "preferred-routes_search_get",
        "arguments": {
          "origin": "ACK",
          "dest": "ERI",
          "type": "L"
        }
      }
    ]
  },
  {
    "query": "I'm interested in the live air traffic at Hartsfield-Jackson Atlanta International Airport (ICAO: KATL). Can you find the arrivals and departures at this airport on VATSIM?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "vatsim_pilots_get",
        "arguments": {
          "apt": "KATL"
        }
      }
    ]
  },
  {
    "query": "I'd like to know who's controlling the airspace around Shez Ansari (fac: CHI) on VATSIM. Can you find the controllers at this facility for me?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "vatsim_controllers_get",
        "arguments": {
          "fac": "CHI"
        }
      }
    ]
  },
  {
    "query": "I'm worried about the weather for my flight to Asheville. Can you get the METAR weather report for Asheville Regional Airport (ICAO: KAVL)?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "weather_metar_get",
        "arguments": {
          "apt": "KAVL"
        }
      }
    ]
  },
  {
    "query": "I need to plan for the weather during my entire stay in Asheville. Can you get the Terminal Aerodrome Forecast (TAF) for Asheville Regional Airport (ICAO: KAVL)?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "weather_taf_get",
        "arguments": {
          "apt": "KAVL"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Chicago next week. Can you check the weather conditions at O'Hare International Airport (ICAO: ORD) for me? Also, I'd like to know the runway length and the type of surface of the longest runway there.",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "weather_metar_get",
        "arguments": {
          "apt": "ORD"
        }
      },
      {
        "name": "airports_get",
        "arguments": {
          "apt": "ORD"
        }
      }
    ]
  },
  {
    "query": "I'm studying for my pilot's license and need some help. Could you fetch me the aeronautical chart for Los Angeles International Airport (ICAO: KLAX)? Also, please provide me with the airport's elevation and the type of fuel available there.",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "charts_get",
        "arguments": {
          "apt": "KLAX"
        }
      },
      {
        "name": "airports_get",
        "arguments": {
          "apt": "KLAX"
        }
      }
    ]
  },
  {
    "query": "I'm a travel blogger and I'm writing about the airports in New York. Can you provide me with the airport information for John F. Kennedy International Airport (ICAO: KJFK) and LaGuardia Airport (ICAO: KLGA)?",
    "tools": [
      {
        "name": "airports_get",
        "description": "Get an airport by its ICAO or FAA identifier",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO facility identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          }
        }
      },
      {
        "name": "charts_get",
        "description": "Get charts for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL). Separate multiple entries with a comma.",
            "required": true
          },
          "group": {
            "type": "integer",
            "description": "Optional grouping of the charts. 1 -> General, Departures, Arrivals, Approaches; 2 -> Airport Diagram only; 3 -> General only; 4 -> Departures only; 5 -> Arrivals only; 6 -> Approaches only; 7 -> Everything but General."
          }
        }
      },
      {
        "name": "charts_changes_get",
        "description": "Get chart changes by airport or chart name",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KAVL or AVL).",
            "required": true
          },
          "chart_name": {
            "type": "string",
            "description": "Partial or full name of the chart/procedure."
          }
        }
      },
      {
        "name": "charts_afd_get",
        "description": "Get the AFD for a specified airport",
        "parameters": {
          "apt": {
            "type": "string",
            "description": "FAA or ICAO airport identifier (KCLT or CLT).",
            "required": true
          }
        }
      },
      {
        "name": "preferred-routes_get",
        "description": "Get all of the preferred routes",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "airports_get",
        "arguments": {
          "apt": "KJFK"
        }
      },
      {
        "name": "airports_get",
        "arguments": {
          "apt": "KLGA"
        }
      }
    ]
  },
  {
    "query": "I'm having a party tonight and want to entertain my guests with some Chuck Norris jokes. Can you find a random joke for me to tell them?",
    "tools": [
      {
        "name": "jokes_random_get",
        "description": "Retrieve a random Chuck Norris joke",
        "parameters": {}
      },
      {
        "name": "jokes_random_category_get",
        "description": "Retrieve a random Chuck Norris joke by category",
        "parameters": {
          "category": {
            "type": "string",
            "description": "The category from which to fetch the random joke."
          }
        }
      },
      {
        "name": "jokes_categories_get",
        "description": "Retrieve a list of available categories",
        "parameters": {}
      },
      {
        "name": "jokes_search_get",
        "description": "Free text search for Chuck Norris jokes",
        "parameters": {
          "query": {
            "type": "string",
            "description": "The search query for filtering jokes.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "jokes_random_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm writing a blog post about Chuck Norris and his impact on pop culture. I need a joke related to 'music'. Can you find one for me?",
    "tools": [
      {
        "name": "jokes_random_get",
        "description": "Retrieve a random Chuck Norris joke",
        "parameters": {}
      },
      {
        "name": "jokes_random_category_get",
        "description": "Retrieve a random Chuck Norris joke by category",
        "parameters": {
          "category": {
            "type": "string",
            "description": "The category from which to fetch the random joke."
          }
        }
      },
      {
        "name": "jokes_categories_get",
        "description": "Retrieve a list of available categories",
        "parameters": {}
      },
      {
        "name": "jokes_search_get",
        "description": "Free text search for Chuck Norris jokes",
        "parameters": {
          "query": {
            "type": "string",
            "description": "The search query for filtering jokes.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "jokes_random_category_get",
        "arguments": {
          "category": "music"
        }
      }
    ]
  },
  {
    "query": "I'm doing a presentation on Chuck Norris for my film class. Can you help me find a joke from the 'movie' category to lighten the mood?",
    "tools": [
      {
        "name": "jokes_random_get",
        "description": "Retrieve a random Chuck Norris joke",
        "parameters": {}
      },
      {
        "name": "jokes_random_category_get",
        "description": "Retrieve a random Chuck Norris joke by category",
        "parameters": {
          "category": {
            "type": "string",
            "description": "The category from which to fetch the random joke."
          }
        }
      },
      {
        "name": "jokes_categories_get",
        "description": "Retrieve a list of available categories",
        "parameters": {}
      },
      {
        "name": "jokes_search_get",
        "description": "Free text search for Chuck Norris jokes",
        "parameters": {
          "query": {
            "type": "string",
            "description": "The search query for filtering jokes.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "jokes_random_category_get",
        "arguments": {
          "category": "movie"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trivia night and need some Chuck Norris jokes to include. Can you search for jokes that mention 'Texas'?",
    "tools": [
      {
        "name": "jokes_random_get",
        "description": "Retrieve a random Chuck Norris joke",
        "parameters": {}
      },
      {
        "name": "jokes_random_category_get",
        "description": "Retrieve a random Chuck Norris joke by category",
        "parameters": {
          "category": {
            "type": "string",
            "description": "The category from which to fetch the random joke."
          }
        }
      },
      {
        "name": "jokes_categories_get",
        "description": "Retrieve a list of available categories",
        "parameters": {}
      },
      {
        "name": "jokes_search_get",
        "description": "Free text search for Chuck Norris jokes",
        "parameters": {
          "query": {
            "type": "string",
            "description": "The search query for filtering jokes.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "jokes_search_get",
        "arguments": {
          "query": "Texas"
        }
      }
    ]
  },
  {
    "query": "I'm working on a Chuck Norris-themed board game and need some jokes for the cards. Can you find jokes that involve 'sports'?",
    "tools": [
      {
        "name": "jokes_random_get",
        "description": "Retrieve a random Chuck Norris joke",
        "parameters": {}
      },
      {
        "name": "jokes_random_category_get",
        "description": "Retrieve a random Chuck Norris joke by category",
        "parameters": {
          "category": {
            "type": "string",
            "description": "The category from which to fetch the random joke."
          }
        }
      },
      {
        "name": "jokes_categories_get",
        "description": "Retrieve a list of available categories",
        "parameters": {}
      },
      {
        "name": "jokes_search_get",
        "description": "Free text search for Chuck Norris jokes",
        "parameters": {
          "query": {
            "type": "string",
            "description": "The search query for filtering jokes.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "jokes_search_get",
        "arguments": {
          "query": "sports"
        }
      }
    ]
  },
  {
    "query": "I'm having a party tonight and I want to entertain my guests with some Chuck Norris jokes. Can you find me 3 random jokes?",
    "tools": [
      {
        "name": "jokes_random_get",
        "description": "Retrieve a random Chuck Norris joke",
        "parameters": {}
      },
      {
        "name": "jokes_random_category_get",
        "description": "Retrieve a random Chuck Norris joke by category",
        "parameters": {
          "category": {
            "type": "string",
            "description": "The category from which to fetch the random joke."
          }
        }
      },
      {
        "name": "jokes_categories_get",
        "description": "Retrieve a list of available categories",
        "parameters": {}
      },
      {
        "name": "jokes_search_get",
        "description": "Free text search for Chuck Norris jokes",
        "parameters": {
          "query": {
            "type": "string",
            "description": "The search query for filtering jokes.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "jokes_random_get",
        "arguments": {}
      },
      {
        "name": "jokes_random_get",
        "arguments": {}
      },
      {
        "name": "jokes_random_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm hosting a trivia night at my place this evening. Could you fetch me a random useless fact that I can use to stump my friends? I want something they'll never guess.",
    "tools": [
      {
        "name": "api_v2_facts_random_get",
        "description": "Get random useless fact",
        "parameters": {}
      },
      {
        "name": "api_v2_facts_today_get",
        "description": "Get today's useless fact",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm feeling a bit bored. Can you cheer me up with a random, useless fact? I'm in the mood for something quirky and unexpected.",
    "tools": [
      {
        "name": "api_v2_facts_random_get",
        "description": "Get random useless fact",
        "parameters": {}
      },
      {
        "name": "api_v2_facts_today_get",
        "description": "Get today's useless fact",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm writing a blog post about interesting trivia. Can you provide me with a random fact that I can include? It should be something that most people wouldn't know.",
    "tools": [
      {
        "name": "api_v2_facts_random_get",
        "description": "Get random useless fact",
        "parameters": {}
      },
      {
        "name": "api_v2_facts_today_get",
        "description": "Get today's useless fact",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm starting a new daily ritual of learning something new every day. Can you tell me today's useless fact?",
    "tools": [
      {
        "name": "api_v2_facts_random_get",
        "description": "Get random useless fact",
        "parameters": {}
      },
      {
        "name": "api_v2_facts_today_get",
        "description": "Get today's useless fact",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_facts_today_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm writing a daily newsletter and I want to include a fun fact in each issue. Can you give me today's useless fact that I can share with my subscribers?",
    "tools": [
      {
        "name": "api_v2_facts_random_get",
        "description": "Get random useless fact",
        "parameters": {}
      },
      {
        "name": "api_v2_facts_today_get",
        "description": "Get today's useless fact",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_facts_today_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm preparing a presentation for my class about random trivia. Could you help me find some fun, useless facts to include? I need about five facts.",
    "tools": [
      {
        "name": "api_v2_facts_random_get",
        "description": "Get random useless fact",
        "parameters": {}
      },
      {
        "name": "api_v2_facts_today_get",
        "description": "Get today's useless fact",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      },
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      },
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      },
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      },
      {
        "name": "api_v2_facts_random_get",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm planning a trip to Paris next week. Could you find out what the current weather is there? And please, make sure the temperature is in Fahrenheit, I'm more familiar with that.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Paris",
          "units": "f"
        }
      }
    ]
  },
  {
    "query": "I'm curious about the weather in multiple cities for a project. Can you get me the current weather for New York, Tokyo, and Sydney? I'd prefer the data in metric units.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "New York",
          "units": "m"
        }
      },
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Tokyo",
          "units": "m"
        }
      },
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Sydney",
          "units": "m"
        }
      }
    ]
  },
  {
    "query": "I'm heading out for a run in San Francisco. Can you tell me what the current temperature is and how it feels outside? Also, I'd like to know the humidity and visibility.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "San Francisco"
        }
      }
    ]
  },
  {
    "query": "I'm planning a picnic this weekend in London. Could you check the current weather for me? I'm particularly interested in the wind speed and direction.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "London"
        }
      }
    ]
  },
  {
    "query": "I'm writing a blog post about the weather in different parts of the world. Can you fetch the current weather for Beijing, Moscow, and Rio de Janeiro? Please include the local time in each city.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Beijing"
        }
      },
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Moscow"
        }
      },
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Rio de Janeiro"
        }
      }
    ]
  },
  {
    "query": "I'm a science teacher preparing a lesson on weather patterns. Can you get me the current weather for Denver? I need the data in scientific units.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Denver",
          "units": "s"
        }
      }
    ]
  },
  {
    "query": "It's getting colder here. Can you find the current temperature in Fahrenheit for Toronto? I want to see if I need to bring a jacket.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Toronto",
          "units": "f"
        }
      }
    ]
  },
  {
    "query": "I'm organizing an outdoor event next weekend. Is it possible to get the UV index and visibility in Los Angeles during that time?",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Los Angeles"
        }
      }
    ]
  },
  {
    "query": "I'm planning a road trip from New York to Los Angeles next week. Can you help me check the weather conditions for the major cities along the route, like Chicago, Denver, and Las Vegas? I'd like to know if there will be any severe weather conditions that might affect my trip.",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Chicago"
        }
      },
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Denver"
        }
      },
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Las vegas"
        }
      }
    ]
  },
  {
    "query": "I'm planning a beach day in Miami this weekend. Could you check the weather for me? I'd like to know if it's going to be sunny and what the UV index will be. Also, could you tell me what the sea temperature will be?",
    "tools": [
      {
        "name": "current_get",
        "description": "Get current weather",
        "parameters": {
          "access_key": {
            "type": "string",
            "description": "Your API access key, obtained from your account dashboard.",
            "required": true
          },
          "query": {
            "type": "string",
            "description": "The location(s) you want to get weather data for. It can be a single location or multiple semicolon-separated location identifiers.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [m, s, f]. [Optional] Specify the unit identifier for temperature and other measurements. (m: Metric, s: Scientific, f: Fahrenheit)."
          },
          "callback": {
            "type": "string",
            "description": "[Optional] Use this parameter for JSONP callback function name wrapping."
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#WeatherResponse: Object{request: Object{type, query, language, unit}, location: Object{name, country, region, lat, lon, timezone_id, localtime, localtime_epoch, utc_offset}, current: Object{observation_time, temperature, weather_code, weather_icons: Array[string], weather_descriptions: Array[string], wind_speed, wind_degree, wind_dir, pressure, precip, humidity, cloudcover, feelslike, uv_index, visibility}}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "current_get",
        "arguments": {
          "access_key": "75619bf6f850d32727357000f37257d6",
          "query": "Miami"
        }
      }
    ]
  },
  {
    "query": "I'm preparing for a spelling bee and need to practice my pronunciation. Could you find the phonetics and audio pronunciation for the word 'quixotic' for me?",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "quixotic"
        }
      }
    ]
  },
  {
    "query": "I'm writing a report on the etymology of words. Can you find the origin of the word 'serendipity'?",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "serendipity"
        }
      }
    ]
  },
  {
    "query": "I'm trying to expand my vocabulary. Can you find synonyms for the word 'beautiful'?",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "beautiful"
        }
      }
    ]
  },
  {
    "query": "I'm a bit confused about the usage of the word 'ephemeral'. Could you provide me with its definition and an example sentence?",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "ephemeral"
        }
      }
    ]
  },
  {
    "query": "I'm trying to understand the difference between 'affect' and 'effect'. Could you fetch the definitions and examples of both words?",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "affect"
        }
      },
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "effect"
        }
      }
    ]
  },
  {
    "query": "I'm working on my English vocabulary. Can you help me understand the word \"serendipity\"? I need its definition, pronunciation, part of speech, and some examples of its usage. Also, provide me with some synonyms to expand my vocabulary.",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "serendipity"
        }
      }
    ]
  },
  {
    "query": "I'm writing a poem and I need some inspiration. Could you find the definition, pronunciation, and examples of the word \"ephemeral\"? Also, I'd love to know its synonyms to enrich my poem.",
    "tools": [
      {
        "name": "api_v2_entries_en_word_get",
        "description": "Get word definitions",
        "parameters": {
          "word": {
            "type": "string",
            "description": "The English word for which definitions are requested.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "api_v2_entries_en_word_get",
        "arguments": {
          "word": "ephemeral"
        }
      }
    ]
  },
  {
    "query": "Can you find the current temperature in New York City in Fahrenheit using the weather API?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "current temperature in New York City in Fahrenheit"
        }
      }
    ]
  },
  {
    "query": "Please help me calculate the square root of 625 using the math API.",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the square root of 625"
        }
      }
    ]
  },
  {
    "query": "I need to convert 5 miles to kilometers. Can you use the unit conversion API to help me with that?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "convert 5 miles to kilometers"
        }
      }
    ]
  },
  {
    "query": "Could you check the population of Tokyo for me using the demographics API?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the population of Tokyo"
        }
      }
    ]
  },
  {
    "query": "I want to know the capital city of Australia. Can you use the geography API to find that out?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the capital city of Australia"
        }
      }
    ]
  },
  {
    "query": "Hey, I'm trying to help my daughter with her homework and we're stuck on this math problem. Can you find out what the square root of 256 is?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the square root of 256"
        }
      }
    ]
  },
  {
    "query": "I'm working on a science project and I need to know how many moons Jupiter has. Can you look that up for me?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "how many moons Jupiter has"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Paris and I'm curious about the weather. Can you find out what the average temperature is in Paris in July?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "what the average temperature is in Paris in July"
        }
      }
    ]
  },
  {
    "query": "I'm doing a presentation on famous scientists. Can you find out when Albert Einstein was born?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "when Albert Einstein was born"
        }
      }
    ]
  },
  {
    "query": "I'm trying to lose weight and I'm counting calories. Can you tell me how many calories are in a medium-sized apple?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "how many calories are in a medium-sized apple"
        }
      }
    ]
  },
  {
    "query": "I'm writing a report on the solar system and I need some information. Can you tell me the diameter of Mars and the distance between Mars and Earth?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the diameter of Mars"
        }
      },
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the distance between Mars and Earth"
        }
      }
    ]
  },
  {
    "query": "I'm trying to eat healthier and I need to know the nutritional value of some foods. Can you tell me how many calories are in an apple and a banana?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "how many calories are in an apple"
        }
      },
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "how many calories are in a banana"
        }
      }
    ]
  },
  {
    "query": "I'm planning a road trip and I need to calculate the distance. Can you tell me the distance from Los Angeles to New York by car? Also, can you tell me how long it would take to drive that distance?",
    "tools": [
      {
        "name": "result_get",
        "description": "Get short answer from Wolfram Alpha",
        "parameters": {
          "appid": {
            "type": "string",
            "description": "Your Wolfram Alpha API AppID.",
            "required": true
          },
          "i": {
            "type": "string",
            "description": "The URL-encoded input for your query.",
            "required": true
          },
          "units": {
            "type": "string",
            "description": "One of: [metric, imperial]. Select what system of units to use for measurements and quantities (either 'metric' or 'imperial'). Defaults to location-based unit selection."
          },
          "timeout": {
            "type": "integer",
            "description": "The maximum amount of time (in seconds) allowed to process a query. Defaults to 5 seconds."
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "the distance from Los Angeles to New York by car"
        }
      },
      {
        "name": "result_get",
        "arguments": {
          "appid": "LQGE4R-VPE825U26W",
          "i": "how long it would take to drive from Los Angeles to New York by car"
        }
      }
    ]
  },
  {
    "query": "Can you find me information about a fruit called \"mango\" using the API? I want to know its nutritional values like carbohydrates, protein, fat, calories, and sugar.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "mango"
        }
      }
    ]
  },
  {
    "query": "Please fetch all the fruits available in the API. I want to explore the variety and learn about different fruit options.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getAllFruits",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm curious about fruits belonging to the \"Rosaceae\" family. Can you retrieve information about a fruit from this family using the API? I'd like to know its name, genus, order, and nutritional values.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitByFamily",
        "arguments": {
          "family": "Rosaceae"
        }
      }
    ]
  },
  {
    "query": "I'm trying to find fruits that belong to the \"Citrus\" genus. Could you help me retrieve a list of all such fruits using the API? I'm interested in their names, families, and nutritional values.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitsByGenus",
        "arguments": {
          "genus": "Citrus"
        }
      }
    ]
  },
  {
    "query": "I'm planning to make a fruit salad, and I want to include fruits from the \"Sapindales\" order. Can you fetch a list of fruits belonging to this order using the API? I need their names, families, and nutritional values.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitsByOrder",
        "arguments": {
          "order": "Sapindales"
        }
      }
    ]
  },
  {
    "query": "I'm planning a themed dinner and want to serve fruits from the 'Rosales' order. Can you provide me with a list of fruits in this order?",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitsByOrder",
        "arguments": {
          "order": "Rosales"
        }
      }
    ]
  },
  {
    "query": "I'm interested in learning more about the 'Citrus' genus. Can you provide me with a list of fruits that belong to this genus?",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitsByGenus",
        "arguments": {
          "genus": "Citrus"
        }
      }
    ]
  },
  {
    "query": "I've been told that fruits from the 'Solanaceae' family are not good for my health. Can you find out which fruits belong to this family so I can avoid them?",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitByFamily",
        "arguments": {
          "family": "Solanaceae"
        }
      }
    ]
  },
  {
    "query": "I'm curious about the nutritional value of an apple. Can you find out how many calories, carbohydrates, proteins, fats, and sugars an apple has?",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "apple"
        }
      }
    ]
  },
  {
    "query": "I'm trying to put together a fruit salad for a party this weekend. Can you help me find a list of fruits that are in season right now, and also tell me their nutritional values? I want to make sure I'm providing a healthy option for my guests.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "apple"
        }
      },
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "banana"
        }
      }
    ]
  },
  {
    "query": "I'm curious about the origin of my favorite fruits. Could you find out where apples, oranges, and bananas originally come from? Also, I'd like to know their peak harvesting times.",
    "tools": [
      {
        "name": "getFruitByName",
        "description": "Get a fruit information by its name",
        "parameters": {
          "name": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getAllFruits",
        "description": "Get all fruits",
        "parameters": {}
      },
      {
        "name": "getFruitByFamily",
        "description": "Get a fruit by family",
        "parameters": {
          "family": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByGenus",
        "description": "Get fruits by genus",
        "parameters": {
          "genus": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "getFruitsByOrder",
        "description": "Get fruits by order",
        "parameters": {
          "order": {
            "type": "string",
            "description": "",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Fruit: Object{name, id, family, genus, order, nutritions: Object{carbohydrates, protein, fat, calories, sugar}}\n#ErrorNotFound: Object{error}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "apple"
        }
      },
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "orange"
        }
      },
      {
        "name": "getFruitByName",
        "arguments": {
          "name": "banana"
        }
      }
    ]
  },
  {
    "query": "Hey, can you help me find a random cat picture? I need one with a width of 500 pixels and a height of 300 pixels. It would be great if you could return it in JSON format.",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getRandomCat",
        "arguments": {
          "width": "500",
          "height": "300",
          "json": "true"
        }
      }
    ]
  },
  {
    "query": "I'm looking for a cat picture with the tag 'cute'. Could you find me a random one? Make sure it has a width of 800 pixels and a height of 600 pixels.",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "findCatByTag",
        "arguments": {
          "tag": "cute",
          "width": "800",
          "height": "600"
        }
      }
    ]
  },
  {
    "query": "I want to surprise my friend with a cat picture that says 'Happy Birthday!' Can you find a random cat image with that text?",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "findCatWithText",
        "arguments": {
          "text": "Happy Birthday!"
        }
      }
    ]
  },
  {
    "query": "I need a list of all the available cat tags. Can you retrieve them for me?",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "tags",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm curious about how many cats are available in the database. Can you count them for me?",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "count",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I want to browse through a variety of cat pictures. Can you retrieve a list of 3 cats for me?",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getRandomCat",
        "arguments": {}
      },
      {
        "name": "getRandomCat",
        "arguments": {}
      },
      {
        "name": "getRandomCat",
        "arguments": {}
      }
    ]
  },
  {
    "query": "I'm feeling a bit down and could use a pick-me-up. Could you find me a random picture of a cat? Make sure it's a cute one!",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getRandomCat",
        "arguments": {
          "type": "cute"
        }
      }
    ]
  },
  {
    "query": "I'm working on a presentation about cats and need some visuals. Can you get me a picture of a cat that's exactly 500 pixels wide and 300 pixels high? I'd prefer it if the cat was a tabby.",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "getRandomCat",
        "arguments": {
          "type": "tabby",
          "width": "500",
          "height": "300"
        }
      }
    ]
  },
  {
    "query": "I need a funny image for a birthday card. Can you find me a picture of a cat with the text 'Happy Birthday' on it?",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "findCatWithText",
        "arguments": {
          "text": "Happy Birthday!"
        }
      }
    ]
  },
  {
    "query": "I'm planning a surprise party for my friend who loves cats. Could you help me design an invitation? I'd like a picture of a cat with a party hat, and the text \"You're invited to a purr-fect party!\" on it.",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "findCatWithText",
        "arguments": {
          "text": "You're invited to a purr-fect party!",
          "type": "party hat"
        }
      }
    ]
  },
  {
    "query": "I'm starting a blog about my life as a cat owner. Could you provide me with a cat gif for my first post? I'd also like to add a caption saying \"Welcome to my cat-tastic journey!\".",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "findCatWithText",
        "arguments": {
          "text": "Welcome to my cat-tastic journey!"
        }
      }
    ]
  },
  {
    "query": "I'm making a birthday card for my niece who loves kittens. Could you find a cute kitten picture for me? And could you add the text \"Happy Birthday!\" on it?",
    "tools": [
      {
        "name": "getRandomCat",
        "description": "Get random cat",
        "parameters": {
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatById",
        "description": "Get cat by id",
        "parameters": {
          "id": {
            "type": "string",
            "description": "Cat ID.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatByTag",
        "description": "Get random cat by tag",
        "parameters": {
          "tag": {
            "type": "string",
            "description": "Tag to filter cats.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "findCatWithText",
        "description": "Get random cat saying text",
        "parameters": {
          "text": {
            "type": "string",
            "description": "Text that the cat says.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "Filter by cat type."
          },
          "width": {
            "type": "string",
            "description": "Desired width of the cat image."
          },
          "height": {
            "type": "string",
            "description": "Desired height of the cat image."
          },
          "html": {
            "type": "string",
            "description": "Include HTML code."
          },
          "json": {
            "type": "string",
            "description": "Include JSON data."
          }
        }
      },
      {
        "name": "api",
        "description": "Will return all cats",
        "parameters": {
          "limit": {
            "type": "number",
            "description": "Number of cats to retrieve."
          },
          "skip": {
            "type": "number",
            "description": "Number of cats to skip."
          },
          "tags": {
            "type": "string",
            "description": "Filter by tags."
          }
        }
      },
      {
        "name": "tags",
        "description": "Will return all tags",
        "parameters": {}
      },
      {
        "name": "count",
        "description": "Count how many cats",
        "parameters": {}
      },
      {
        "name": "components",
        "description": "The detailed output format for the tools is outlined below:\n#Cat: Object{_id, tags: Array[string], owner, createdAt, updatedAt}\n#CatEdit: Object{tags: Array[string]}\n#CatError: Object{message, code}",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "findCatWithText",
        "arguments": {
          "text": "Happy Birthday!",
          "type": "cute"
        }
      }
    ]
  },
  {
    "query": "Hey, can you help me find out the current exchange rate for USD to EUR using the currency API? I need to know how many Euros I'll get for 100 US dollars.",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "latest_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "symbols": "EUR"
        }
      }
    ]
  },
  {
    "query": "Could you please fetch the historical exchange rate data for GBP to CAD on January 1, 2022, using the currency API? I want to analyze the currency fluctuations for that day.",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "historical_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "GBP",
          "date": "2022-01-01",
          "symbols": "CAD"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Japan next month. Can you retrieve the exchange rate data for USD to JPY from October 1, 2021, to November 30, 2021, using the currency API? I want to compare the rates and estimate my expenses.",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "timeseries_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "start_date": "2021-10-01",
          "end_date": "2021-11-30",
          "symbols": "JPY"
        }
      }
    ]
  },
  {
    "query": "I need to convert 500 Euros to US dollars. Can you use the currency API to convert the amount from EUR to USD for me?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "convert_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "from": "EUR",
          "to": "USD",
          "amount": 500
        }
      }
    ]
  },
  {
    "query": "I want to know the current exchange rates for USD, EUR, and GBP. Can you fetch the real-time rates for these currencies using the currency API?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "latest_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "symbols": [
            "EUR",
            "GBP"
          ]
        }
      }
    ]
  },
  {
    "query": "I'm planning a vacation to Thailand next year. Can you fetch the exchange rate data for THB to USD from January 1, 2023, to December 31, 2023, using the currency API? I want to estimate my budget.",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "timeseries_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "THB",
          "start_date": "2023-01-01",
          "end_date": "2023-12-31",
          "symbols": "USD"
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Japan next month. Could you find out how much 1000 US dollars would be in Japanese yen using the current exchange rate?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "convert_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "from": "USD",
          "to": "JPY",
          "amount": 1000
        }
      }
    ]
  },
  {
    "query": "I need to send some money to my friend in France. Can you tell me how much 200 US dollars would convert to in Euros?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "convert_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "from": "USD",
          "to": "EUR",
          "amount": 200
        }
      }
    ]
  },
  {
    "query": "I'm a forex trader and I need to know the current exchange rates for the US dollar against the Euro, British pound, and Japanese yen. Can you get this information for me?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "latest_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "symbols": [
            "EUR",
            "GBP",
            "JPY"
          ]
        }
      }
    ]
  },
  {
    "query": "I'm planning a trip to Japan next month, and I want to start budgeting. Can you tell me the current exchange rate from US dollars to Japanese yen, and also provide the average exchange rate for July?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "latest_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "symbols": "JPY"
        }
      },
      {
        "name": "timeseries_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "start_date": "2023-07-01",
          "end_date": "2023-07-31",
          "symbols": "JPY"
        }
      }
    ]
  },
  {
    "query": "I'm a business owner and I need to invoice a client in Europe. Can you provide me with the current exchange rate from US dollars to Euros, and also the average rate for the July so I can set a fair price?",
    "tools": [
      {
        "name": "latest_get",
        "description": "Get real-time exchange rates for all supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "historical_get",
        "description": "Get historical exchange rate data for a specific date.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "date": {
            "type": "string",
            "description": "The historical date you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "timeseries_get",
        "description": "Get historical exchange rate data for a specified time range.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "base": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "start_date": {
            "type": "string",
            "description": "The start date for the time series you would like to access.",
            "required": true
          },
          "end_date": {
            "type": "string",
            "description": "The end date for the time series you would like to access.",
            "required": true
          },
          "symbols": {
            "type": "string",
            "description": "A list of currencies you want to see the rates for."
          }
        }
      },
      {
        "name": "currencies_get",
        "description": "Get information about supported currencies.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "type": {
            "type": "string",
            "description": "The type of currencies (fiat or crypto).",
            "required": true
          }
        }
      },
      {
        "name": "convert_get",
        "description": "Convert an amount from one currency to another.",
        "parameters": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication.",
            "required": true
          },
          "from": {
            "type": "string",
            "description": "The base currency you would like to use for your rates.",
            "required": true
          },
          "to": {
            "type": "string",
            "description": "The currency you would like to convert to."
          },
          "amount": {
            "type": "string",
            "description": "The amount to convert.",
            "required": true
          }
        }
      },
      {
        "name": "components",
        "description": "",
        "parameters": {}
      }
    ],
    "answers": [
      {
        "name": "latest_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "symbols": "EUR"
        }
      },
      {
        "name": "timeseries_get",
        "arguments": {
          "api_key": "8BbG6gN9g3Y29h5EMMSEw6avX0c1LYkw",
          "base": "USD",
          "start_date": "2023-07-01",
          "end_date": "2023-07-31",
          "symbols": "EUR"
        }
      }
    ]
  }
]